/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { __stores__ } from './store';
import { isString } from '../internal/utils';
var SnapshotManager = /** @class */ (function () {
    function SnapshotManager() {
    }
    /**
     * Get a snapshot of the whole state or a specific stores
     * Use it ONLY for things like saving the state in the server
     */
    /**
     * Get a snapshot of the whole state or a specific stores
     * Use it ONLY for things like saving the state in the server
     * @param {?=} stores
     * @return {?}
     */
    SnapshotManager.prototype.getStoresSnapshot = /**
     * Get a snapshot of the whole state or a specific stores
     * Use it ONLY for things like saving the state in the server
     * @param {?=} stores
     * @return {?}
     */
    function (stores) {
        if (stores === void 0) { stores = []; }
        /** @type {?} */
        var acc = {};
        /** @type {?} */
        var hasInclude = stores.length > 0;
        /** @type {?} */
        var keys = hasInclude ? stores : Object.keys(__stores__);
        for (var i = 0; i < keys.length; i++) {
            /** @type {?} */
            var storeName = keys[i];
            acc[storeName] = __stores__[storeName]._value();
        }
        return acc;
    };
    /**
     * Set snapshot we get from the server
     */
    /**
     * Set snapshot we get from the server
     * @param {?} stores
     * @return {?}
     */
    SnapshotManager.prototype.setStoresSnapshot = /**
     * Set snapshot we get from the server
     * @param {?} stores
     * @return {?}
     */
    function (stores) {
        /** @type {?} */
        var normalizedStores = stores;
        if (isString(stores)) {
            normalizedStores = JSON.parse((/** @type {?} */ (normalizedStores)));
        }
        var _loop_1 = function (i, keys) {
            /** @type {?} */
            var storeName = keys[i];
            if (__stores__[storeName]) {
                __stores__[storeName].setState(function () { return normalizedStores[storeName]; });
            }
        };
        for (var i = 0, keys = Object.keys(normalizedStores); i < keys.length; i++) {
            _loop_1(i, keys);
        }
    };
    return SnapshotManager;
}());
export { SnapshotManager };
/** @type {?} */
export var snapshotManager = new SnapshotManager();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic25hcHNob3QtbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BkYXRvcmFtYS9ha2l0YS8iLCJzb3VyY2VzIjpbInNyYy9hcGkvc25hcHNob3QtbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUNyQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFN0M7SUFBQTtJQWlDQSxDQUFDO0lBaENDOzs7T0FHRzs7Ozs7OztJQUNILDJDQUFpQjs7Ozs7O0lBQWpCLFVBQWtCLE1BQXFCO1FBQXJCLHVCQUFBLEVBQUEsV0FBcUI7O1lBQ2pDLEdBQUcsR0FBRyxFQUFFOztZQUNOLFVBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUM7O1lBQzlCLElBQUksR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDMUQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7O2dCQUNoQyxTQUFTLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN2QixHQUFHLENBQUMsU0FBUyxDQUFDLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ2pEO1FBRUQsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNILDJDQUFpQjs7Ozs7SUFBakIsVUFBa0IsTUFBNkM7O1lBQ3pELGdCQUFnQixHQUFHLE1BQU07UUFDN0IsSUFBSSxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDcEIsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxtQkFBQSxnQkFBZ0IsRUFBVSxDQUFDLENBQUM7U0FDM0Q7Z0NBRVEsQ0FBQyxFQUFNLElBQUk7O2dCQUNaLFNBQVMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3pCLElBQUksVUFBVSxDQUFDLFNBQVMsQ0FBQyxFQUFFO2dCQUN6QixVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBUSxDQUFDLGNBQU0sT0FBQSxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsRUFBM0IsQ0FBMkIsQ0FBQyxDQUFDO2FBQ25FO1FBQ0gsQ0FBQztRQUxELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFO29CQUFqRSxDQUFDLEVBQU0sSUFBSTtTQUtuQjtJQUNILENBQUM7SUFDSCxzQkFBQztBQUFELENBQUMsQUFqQ0QsSUFpQ0M7OztBQUVELE1BQU0sS0FBTyxlQUFlLEdBQUcsSUFBSSxlQUFlLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX3N0b3Jlc19fIH0gZnJvbSAnLi9zdG9yZSc7XG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4uL2ludGVybmFsL3V0aWxzJztcblxuZXhwb3J0IGNsYXNzIFNuYXBzaG90TWFuYWdlciB7XG4gIC8qKlxuICAgKiBHZXQgYSBzbmFwc2hvdCBvZiB0aGUgd2hvbGUgc3RhdGUgb3IgYSBzcGVjaWZpYyBzdG9yZXNcbiAgICogVXNlIGl0IE9OTFkgZm9yIHRoaW5ncyBsaWtlIHNhdmluZyB0aGUgc3RhdGUgaW4gdGhlIHNlcnZlclxuICAgKi9cbiAgZ2V0U3RvcmVzU25hcHNob3Qoc3RvcmVzOiBzdHJpbmdbXSA9IFtdKSB7XG4gICAgbGV0IGFjYyA9IHt9O1xuICAgIGNvbnN0IGhhc0luY2x1ZGUgPSBzdG9yZXMubGVuZ3RoID4gMDtcbiAgICBjb25zdCBrZXlzID0gaGFzSW5jbHVkZSA/IHN0b3JlcyA6IE9iamVjdC5rZXlzKF9fc3RvcmVzX18pO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IHN0b3JlTmFtZSA9IGtleXNbaV07XG4gICAgICBhY2Nbc3RvcmVOYW1lXSA9IF9fc3RvcmVzX19bc3RvcmVOYW1lXS5fdmFsdWUoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWNjO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCBzbmFwc2hvdCB3ZSBnZXQgZnJvbSB0aGUgc2VydmVyXG4gICAqL1xuICBzZXRTdG9yZXNTbmFwc2hvdChzdG9yZXM6IHsgW3N0b3JlTmFtZTogc3RyaW5nXTogYW55IH0gfCBzdHJpbmcpIHtcbiAgICBsZXQgbm9ybWFsaXplZFN0b3JlcyA9IHN0b3JlcztcbiAgICBpZiAoaXNTdHJpbmcoc3RvcmVzKSkge1xuICAgICAgbm9ybWFsaXplZFN0b3JlcyA9IEpTT04ucGFyc2Uobm9ybWFsaXplZFN0b3JlcyBhcyBzdHJpbmcpO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwLCBrZXlzID0gT2JqZWN0LmtleXMobm9ybWFsaXplZFN0b3Jlcyk7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBzdG9yZU5hbWUgPSBrZXlzW2ldO1xuICAgICAgaWYgKF9fc3RvcmVzX19bc3RvcmVOYW1lXSkge1xuICAgICAgICBfX3N0b3Jlc19fW3N0b3JlTmFtZV0uc2V0U3RhdGUoKCkgPT4gbm9ybWFsaXplZFN0b3Jlc1tzdG9yZU5hbWVdKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHNuYXBzaG90TWFuYWdlciA9IG5ldyBTbmFwc2hvdE1hbmFnZXIoKTtcbiJdfQ==