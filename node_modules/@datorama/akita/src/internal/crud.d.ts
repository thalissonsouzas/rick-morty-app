import { Entities, EntityState, HashMap, ID, Newable, AddOptions } from '../api/types';
export declare class CRUD {
    _set<S, E>(state: S, entities: E[] | HashMap<E> | Entities<E>, entityClass: Newable<E> | undefined, idKey: any): S;
    _replaceEntity<T extends EntityState>(state: T, id: ID, entity: any): T;
    _add<S extends EntityState, E>(state: S, entities: E[], idKey: any, options?: AddOptions): S;
    _update<T extends EntityState>(state: T, ids: ID[], newStateOrFn: object | ((e: Readonly<any>) => object), idKey: string): T;
    _remove<T extends EntityState>(state: T, ids: ID[] | null): T;
    private _removeAll;
    private keyBy;
}
export declare const _crud: CRUD;
