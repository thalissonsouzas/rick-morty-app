/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { take } from 'rxjs/operators';
import { queryConfigKey } from './query-config';
/**
 * @template S
 */
export class Query {
    /**
     * @param {?} store
     */
    constructor(store) {
        this.store = store;
        this.__store__ = store;
    }
    /**
     * @template R
     * @param {?=} project
     * @return {?}
     */
    select(project) {
        /** @type {?} */
        let state = project ? project : state => state;
        return this.store._select(state);
    }
    /**
     * Select once and complete.
     * @template R
     * @param {?} project
     * @return {?}
     */
    selectOnce(project) {
        return this.select(project).pipe(take(1));
    }
    /**
     * Select the store's loading state.
     * @return {?}
     */
    selectLoading() {
        return this.select(state => ((/** @type {?} */ (state))).loading);
    }
    /**
     * Select the store's error state.
     * @return {?}
     */
    selectError() {
        return this.select(state => ((/** @type {?} */ (state))).error);
    }
    /**
     * Get the raw value of the store.
     * @return {?}
     */
    getSnapshot() {
        return this.store._value();
    }
    /**
     *  Returns whether the state of the store is pristine (the set() method hasn't been explicitly called
     *  since the store creation, or the last time setPristine()was called).
     * @return {?}
     */
    get isPristine() {
        return this.store.isPristine;
    }
    /**
     * Returns whether the state of the store is dirty (the set() method
     * or the setDirty() method has been explicitly called since the store creation,
     * or the last time setPristine() was called).
     * @return {?}
     */
    get isDirty() {
        return !this.store.isPristine;
    }
    /**
     * @return {?}
     */
    get config() {
        return this.constructor[queryConfigKey];
    }
}
if (false) {
    /**
     * Use only for internal plugins like Pagination - don't use this property *
     * @type {?}
     */
    Query.prototype.__store__;
    /** @type {?} */
    Query.prototype.store;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZGF0b3JhbWEvYWtpdGEvIiwic291cmNlcyI6WyJzcmMvYXBpL3F1ZXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDdEMsT0FBTyxFQUFFLGNBQWMsRUFBc0IsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUVwRSxNQUFNLE9BQU8sS0FBSzs7OztJQUloQixZQUFzQixLQUFlO1FBQWYsVUFBSyxHQUFMLEtBQUssQ0FBVTtRQUNuQyxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUN6QixDQUFDOzs7Ozs7SUFXRCxNQUFNLENBQUksT0FBeUI7O1lBQzdCLEtBQUssR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLO1FBQzlDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkMsQ0FBQzs7Ozs7OztJQUtELFVBQVUsQ0FBSSxPQUF3QjtRQUNwQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVDLENBQUM7Ozs7O0lBS0QsYUFBYTtRQUNYLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsbUJBQUEsS0FBSyxFQUE0QixDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0UsQ0FBQzs7Ozs7SUFLRCxXQUFXO1FBQ1QsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxtQkFBQSxLQUFLLEVBQXNCLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRSxDQUFDOzs7OztJQUtELFdBQVc7UUFDVCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDN0IsQ0FBQzs7Ozs7O0lBTUQsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQztJQUMvQixDQUFDOzs7Ozs7O0lBT0QsSUFBSSxPQUFPO1FBQ1QsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDMUMsQ0FBQztDQUNGOzs7Ozs7SUFwRUMsMEJBQW9COztJQUVSLHNCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0b3JlIH0gZnJvbSAnLi9zdG9yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YWtlIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgcXVlcnlDb25maWdLZXksIFF1ZXJ5Q29uZmlnT3B0aW9ucyB9IGZyb20gJy4vcXVlcnktY29uZmlnJztcblxuZXhwb3J0IGNsYXNzIFF1ZXJ5PFM+IHtcbiAgLyoqIFVzZSBvbmx5IGZvciBpbnRlcm5hbCBwbHVnaW5zIGxpa2UgUGFnaW5hdGlvbiAtIGRvbid0IHVzZSB0aGlzIHByb3BlcnR5ICoqL1xuICBfX3N0b3JlX186IFN0b3JlPFM+O1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBzdG9yZTogU3RvcmU8Uz4pIHtcbiAgICB0aGlzLl9fc3RvcmVfXyA9IHN0b3JlO1xuICB9XG5cbiAgLyoqXG4gICAqIFNlbGVjdCBhIHNsaWNlIGZyb20gdGhlIHN0b3JlLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiB0aGlzLnF1ZXJ5LnNlbGVjdCgpXG4gICAqIHRoaXMucXVlcnkuc2VsZWN0KHN0YXRlID0+IHN0YXRlLmVudGl0aWVzKVxuICAgKi9cbiAgc2VsZWN0PFI+KHByb2plY3Q/OiAoc3RvcmU6IFMpID0+IFIpOiBPYnNlcnZhYmxlPFI+O1xuICBzZWxlY3QoKTogT2JzZXJ2YWJsZTxTPjtcbiAgc2VsZWN0PFI+KHByb2plY3Q/OiAoc3RvcmU6IFMpID0+IFIpOiBPYnNlcnZhYmxlPFIgfCBTPiB7XG4gICAgbGV0IHN0YXRlID0gcHJvamVjdCA/IHByb2plY3QgOiBzdGF0ZSA9PiBzdGF0ZTtcbiAgICByZXR1cm4gdGhpcy5zdG9yZS5fc2VsZWN0KHN0YXRlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZWxlY3Qgb25jZSBhbmQgY29tcGxldGUuXG4gICAqL1xuICBzZWxlY3RPbmNlPFI+KHByb2plY3Q6IChzdG9yZTogUykgPT4gUik6IE9ic2VydmFibGU8Uj4ge1xuICAgIHJldHVybiB0aGlzLnNlbGVjdChwcm9qZWN0KS5waXBlKHRha2UoMSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNlbGVjdCB0aGUgc3RvcmUncyBsb2FkaW5nIHN0YXRlLlxuICAgKi9cbiAgc2VsZWN0TG9hZGluZygpIHtcbiAgICByZXR1cm4gdGhpcy5zZWxlY3Qoc3RhdGUgPT4gKHN0YXRlIGFzIFMgJiB7IGxvYWRpbmc6IGJvb2xlYW4gfSkubG9hZGluZyk7XG4gIH1cblxuICAvKipcbiAgICogU2VsZWN0IHRoZSBzdG9yZSdzIGVycm9yIHN0YXRlLlxuICAgKi9cbiAgc2VsZWN0RXJyb3IoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0KHN0YXRlID0+IChzdGF0ZSBhcyBTICYgeyBlcnJvcjogYW55IH0pLmVycm9yKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHJhdyB2YWx1ZSBvZiB0aGUgc3RvcmUuXG4gICAqL1xuICBnZXRTbmFwc2hvdCgpOiBTIHtcbiAgICByZXR1cm4gdGhpcy5zdG9yZS5fdmFsdWUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiAgUmV0dXJucyB3aGV0aGVyIHRoZSBzdGF0ZSBvZiB0aGUgc3RvcmUgaXMgcHJpc3RpbmUgKHRoZSBzZXQoKSBtZXRob2QgaGFzbid0IGJlZW4gZXhwbGljaXRseSBjYWxsZWRcbiAgICogIHNpbmNlIHRoZSBzdG9yZSBjcmVhdGlvbiwgb3IgdGhlIGxhc3QgdGltZSBzZXRQcmlzdGluZSgpd2FzIGNhbGxlZCkuXG4gICAqL1xuICBnZXQgaXNQcmlzdGluZSgpIHtcbiAgICByZXR1cm4gdGhpcy5zdG9yZS5pc1ByaXN0aW5lO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgd2hldGhlciB0aGUgc3RhdGUgb2YgdGhlIHN0b3JlIGlzIGRpcnR5ICh0aGUgc2V0KCkgbWV0aG9kXG4gICAqIG9yIHRoZSBzZXREaXJ0eSgpIG1ldGhvZCBoYXMgYmVlbiBleHBsaWNpdGx5IGNhbGxlZCBzaW5jZSB0aGUgc3RvcmUgY3JlYXRpb24sXG4gICAqIG9yIHRoZSBsYXN0IHRpbWUgc2V0UHJpc3RpbmUoKSB3YXMgY2FsbGVkKS5cbiAgICovXG4gIGdldCBpc0RpcnR5KCkge1xuICAgIHJldHVybiAhdGhpcy5zdG9yZS5pc1ByaXN0aW5lO1xuICB9XG5cbiAgZ2V0IGNvbmZpZygpOiBRdWVyeUNvbmZpZ09wdGlvbnMge1xuICAgIHJldHVybiB0aGlzLmNvbnN0cnVjdG9yW3F1ZXJ5Q29uZmlnS2V5XTtcbiAgfVxufVxuIl19